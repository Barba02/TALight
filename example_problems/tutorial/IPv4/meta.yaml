%YAML 1.2
---
public_folder: public
services:

  gimme_ip_address:
    description: "Questo servizio ti chiedere di inserire un indirizzo ip, per mostrarti a quali indirizzi direte possa appartenere."
    evaluator: [python, services/gimme_ip_address_ita_driver.py]
    args:
      ip_address: 
        regex: /([0-9]{1,3}\.){3}[0-9]{1,3}/gm
        default: 1.2.3.4
        regex-explained: "L'indirizzo ip è una serie di 4 numeri divisi da un punto."      
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it

  how_many_ips:
    description: "Questo servizio prende una subnet mask per mostrare la quantita' di indirizzi ip che possono essere configurati."
    evaluator: [python, services/how_many_ips_ita_driver.py]
    args:
      subnet_Mask:
        regex:  ^((\d)+\.){3}(\d)+$
        default: 255.255.0.0
        regex-explained: Una subnet mask comprende quattro campi separati da punti. Ogni campo è un numero nella rappresentazione digitale.
        explain: una subnet mask comprende quattro campi separati da punti. Ogni campo è un numero che può avere un valore di 0 o 255. 
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  
  first_ip:
    description: "Questo servizio chiede il primo indirizzo ip appartenente all'indirizzo di rete dato (esempio: indirizzo di rete --> 169.21.3.0      primo indirizzo ip --> 169.21.3.0)"
    evaluator: [python, services/first_ip_ita_driver.py]
    args:
        ip_address: 
          regex: /([0-9]{1,3}\.){3}[0-9]{1,3}/gm
          default: 1.2.3.4
          regex-explained: "L'indirizzo ip è una serie di 4 terzine di numeri divisi de da un punto"      
        lang: 
          regex: ^(hardcoded|hardcoded_ext|en|it)$
          default: it

  last_ip:
    description: "Questo servizio chiede l'ultimo indirizzo ip appartenente all'indirizzo di rete dato (esempio: indirizzo di rete --> 169.21.3.0      ultimo indirizzo ip --> 169.21.3.255"
    evaluator: [python, services/last_ip_ita_driver.py]
    args:
        ip_address: 
          regex: /([0-9]{1,3}\.){3}[0-9]{1,3}/gm
          default: 1.2.3.4
          regex-explained: "L'indirizzo ip è una serie di 4 terzine di numeri divisi de da un punto"      
        lang: 
          regex: ^(hardcoded|hardcoded_ext|en|it)$
          default: it

  random_ip:
    description: "Questo servizio chiede un indirizzo ip appartenente all'indirizzo di rete dato(esempio: indirizzo di rete --> 169.21.3.0      ultimo indirizzo ip --> 169.21.3.255"
    evaluator: [python, services/random_ip_ita_driver.py]
    args:
        ip_address: 
          regex: /([0-9]{1,3}\.){3}[0-9]{1,3}/gm
          default: 1.2.3.4
          regex-explained: "L'indirizzo ip è una serie di 4 terzine di numeri divisi de da un punto"      
        lang: 
          regex: ^(hardcoded|hardcoded_ext|en|it)$
          default: it
         
  

  synopsis:
    evaluator: [python, services/synopsis/synopsis_driver.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: any string without space characters but meant to specify one of the services of the problem %(problem)s
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: hardcoded
      metafile:
        regex: ^(main|en|it)$
        default: main
...
