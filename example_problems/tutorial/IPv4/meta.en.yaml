%YAML 1.2
---
public_folder: public
services:
  gimme_IP_in_subnet:
    descrizione: "this service takes in a subnet Mask (e.g., 255.255.0.0) defining a whole range of valid IP addresses. The service returns IP addresses from that range. Use the arguments of the service to specify which IP's in the range should be returned."
    evaluator: [python, services/gimme_IP_in_subnet_driver.py]
    args:
      subnet_Mask:
        regex:  ^((\d)+\.)*(\d)+$
        regex-explained: a netmask comprises four fields separated by dots. Each field is a numer in digital representation.
        example: 255.255.0.0
        explain: a netmask comprises four fields separated by dots. Each field is a numer in the closed interval [0-255] in digital representation.
      output:
        regex:  ^(first_IP|last_IP|random_IP|list_all|number)$
        explain: "the options are as follows:"
        explain1: -first_IP= return only the first valid IP of the range
        explain2: -last_IP= return only the last valid IP of the range
        explain3: -random_IP= return a random_IP in the range (choosen according to the uniform distribution)
        explain4: -list_all= return a list of the IPs in the range in lexicographic order. If random_IP in the range (choosen according to the uniform distribution)
        explain5: -number= return only the number of valid IPs in the range
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  synopsis:
    evaluator: [python, services/synopsis/synopsis_driver.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: any string without space characters but meant to specify one of the services of the problem %(problem)s
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
      metafile:
        regex: ^(main|en|it)$
        default: main
...
