%YAML 1.2
---
public_folder: public
services:
  is_tilable:
    evaluator: [python, services/tell_if_tilable_driver.py]
    description: "You assert that a certain grid is tilable to get a confirm or be contradicted."
    args:
      m:
        regex: ^([1-9]|[1-9][0-9]|100)$
        default: 5
        explain: a number from 1 to 100, the number of rows of your grid.
      n:
        regex: ^([1-9]|[1-9][0-9]|100)$
        default: 5
        explain: a number from 1 to 100, the number of columns of your grid.
      my_conjecture:
        regex: ^yes$
        default: yes
      h:
        regex: ^([1-9]|[1-2][0-9]|20)$
        default: 1
        explain: a number from 1 to 20, the first dimension of the tile.
      k:
        regex: ^([1-9]|[1-2][0-9]|20)$
        default: 2
        explain: a number from 1 to 20, the second dimension of the tile.
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  is_not_tilable:
    evaluator: [python, services/tell_if_tilable_driver.py]
    description: You assert that a certain grid is tilable to get a confirm or be contradicted.
    args:
      m:
        regex: ^([1-9]|[1-9][0-9]|100)$
        default: 5
        explain: a number from 1 to 100, the number of rows of your grid.
      n:
        regex: ^([1-9]|[1-9][0-9]|100)$
        default: 5
        explain: a number from 1 to 100, the number of columns of your grid.
      my_conjecture:
        regex: ^no$
        default: no
      h:
        regex: ^([1-9]|[1-2][0-9]|20)$
        default: 1
        explain: a number from 1 to 20, the first dimension of the tile.
      k:
        regex: ^([1-9]|[1-2][0-9]|20)$
        default: 2
        explain: a number from 1 to 20, the second dimension of the tile.
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  gimme_hints_on_a_tiling:
    evaluator: [python, services/gimme_hints_on_a_tiling_driver.py]
    description: We provide hints on how a tiling of the mxn grid could be.
    args:
      m:
        regex: ^([1-9]|[1-9][0-9]|100)$
        default: 5
        explain: a number from 1 to 100, the number of rows of your grid.
      n:
        regex: ^([1-9]|[1-9][0-9]|100)$
        default: 5
        explain: a number from 1 to 100, the number of columns of your grid.
      h:
        regex: ^([1-9]|[1-2][0-9]|20)$
        default: 1
        explain: a number from 1 to 20, the first dimension of the tile.
      k:
        regex: ^([1-9]|[1-2][0-9]|20)$
        default: 2
        explain: a number from 1 to 20, the second dimension of the tile.
      hint_type:
        regex: ^(decompose|piece_by_piece|)$
        default: decompose
      num_piece:
        regex: ^([1-9]|[1-9][0-9]|100)$
        default: 1
      seed_of_the_tiling:
        regex: ^([1-9]|[1-9][0-9][0-9]|1000)$
        default: 777
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  synopsis:
    evaluator: [python, services/synopsis/synopsis_driver.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: any string without space characters but meant to specify one of the services of the problem %(problem)s
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
      metafile:
        regex: ^(main|en|it)$
        default: main
...
