%YAML 1.2
---
public_folder: public
services:
is_subseq:
gen_subseq_instance:
check_is_subseq_YES_certificate:
eval_subseq:
check_longest_increasing_subseq:
eval_longest_increasing_subseq:
check_num_occurrences_of_S_in_T:    #explain: checks the number of different ways S occurs in T
eval_num_occurrences_of_S_in_T:

check_subseq_set:
check_subseq_list:
check_next_subseq_gen:
eval_next_subseq_gen:
check_rank_of_seq:
eval_rank_of_seq:
  evaluator: [python, services/eval_rank_of_seq_server.py]
  args:
    goal:
      regex: ^(correct|efficient)$
      default: correct
      explain: set your goal (efficient includes also correct).
    code_lang: 
      regex: ^(python|java|nodejs|compiled)$
      default: python
    NO_cert:
      regex: ^(0|1)$
      default: 0
    lang:
      regex: ^(hardcoded|hardcoded_ext|en|it)$
      default: it
eval_count_increasing_subseq:
synopsis:
...
