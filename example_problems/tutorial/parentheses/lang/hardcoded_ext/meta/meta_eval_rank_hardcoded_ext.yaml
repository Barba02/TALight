%YAML 1.2
---
public_folder: public
services:
  check_one_sol:
  check_num_sol:
  eval_num_sol:
  check_sol_set:
  check_sol_list:
  eval_sol_list:
  gen_random_sol:
  check_next_sol:
  eval_next:
  check_rank:
  check_unrank:
  eval_rank:
    evaluator: [python, services/eval_rank_server.py]
    args:
      sorting_criterion:
        regex: ^(loves_opening_par|loves_closing_par)$
        default: loves_opening_par
      goal:
        explain: set your goal (efficient includes also correct).
        regex: ^(correct|efficient)$
        default: correct
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        default: random_seed
        explain: specify the numeric code to reproduce the very same set of instances as in a previous run. Called with seed=random_seed, the service chooses its seed at random (and communicates it to the user).
      code_lang: 
        regex: ^(python|java|nodejs|compiled)$
        default: python
        explain: the more we know about your bot the better we can estimate the efficiency of your algorithm.
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  eval_unrank:
  gimme_rank:
  gimme_unrank:
  gimme_next_sol:
  synopsis:
...
