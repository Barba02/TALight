%YAML 1.2
---
open-channel: '# I will serve: problem={problem}, service={service}\n#  with arguments: '
feedback_source: '# The phrases used in this call of service {service} come from the file \''{service}_feedbackBook.{ENV["lang"]}.yaml\'' placed in the \''lang\'' folder of problem {problem}.'

# NOW THE PROBLEM SERVICE SPECIFIC SECTION:

at-least-one-line: 'No. You are required to enter at least one valid formula before closing.'
first-line-not-well-formed: 'No. Your very first formula of parentheses is not well formed.'
wrong-first: 'No. Your very first formula of parentheses is well-formed but it is not the first well-formed-formula on that number of parentheses according to the order that has been set.'
called-with: '(service called with'
different_lengths: 'No. The well-formed formula of parentheses you have just introduced in your line {len(input_solution_list)+1} has different length than the previous ones.'
order-violation: 'No. The well-formed formula of parentheses you have just introduced in your line {len(input_solution_list)+1} does not come after but rather before than the previous one according to the order set.'
repeated: 'No. The well-formed formula of parentheses you have just introduced in your line {len(input_solution_list)+1} is the same as your {input_solution_list.index(line)+1}th one. But nothing is lost: this repetition will be ignored. You can go on.'
your-formulas-all-ok: 'All the formulas you have introduced are ok (well formed) and correctly ordered.'
list-ok: 'You have listed all well-formed formulas with {n_pairs} pairs of parentheses. Also their order is the intended one.'
one-formula-is-missing-no-feedback: 'No. Your list is missing at least one well-formed formula.'
give-missing-formula: 'Consider for example:'
not-consecutive(last): 'In fact, after {input_solution_list[rank]} there is another formula.'
not-consecutive: 'In fact, the two well-formed formulas:\n {input_solution_list[rank-1]}\n {input_solution_list[rank]}\nthat appear consecutive in your list are NOT consecutive in the intended order'
first-missing-prefix: 'As a strong hint, here is the prefix of a well-formed formula and no formula in your list has this prefix:'
not-consecutive(last): 'In green you find the longest prefix that a solution you are missing has in common with a solution you have given:'
first-missing-till-already-present: 'In green you find the longest prefix that a solution you are missing has in common with a solution you have given:'
one-missing-prefix-length: 'No. Your set is missing at least one well-formed tiling.\nHere is the prefix of length {length} of a well-formed formula that is missing from the set you entered:'
