%YAML 1.2
---
open-channel: '# I will serve: problem={problem}, service={service}\n#  with arguments: '
feedback_source: '# These information in english come from the following files\n#   the phrases externally structuring the help sheets of the synopsis service come from the file \''.../TALight/universal_services/synopsis/synopsis_feedbackBook.hardcoded_ext.yaml\''\n#   the problem specific information for the service this help sheet is about (service {self.ENV.service} of the problem {self.ENV.problem})  come from a dictionary of the feedback phrases of the service (more precisley, the .yaml file ({self.messages_book_file})\''.'

#NOW THE PROBLEM SERVICE SPECIFIC SECTION:

ok-congruent: '♥  We agree. The number of well-formed formulas with {ENV["n_pairs"]} pairs of open-closed parentheses is congruent to {ENV["risp"]} modulo {ENV["ok_if_congruent_modulus"]}.'
ok-equal: '♥  We agree. There are precisely {ENV["risp"]} well-formed formulas with {ENV["n_pairs"]} pairs of open-closed parentheses.'
not-equal: 'No. The well-formed formulas with {ENV["n_pairs"]} pairs of open-closed parentheses are not {ENV["risp"]}.'
not-congruent: 'No. The number of well-formed formulas with {ENV["n_pairs"]} pairs of open-closed parentheses is NOT congruent to {ENV["risp"]} modulo {ENV["ok_if_congruent_modulus"]}.'
however: 'However, I noticed that your risp={ENV["risp"]} is actually congruent modulo {ENV["ok_if_congruent_modulus"]} to the correct risp. Note that {ENV["ok_if_congruent_modulus"]} is the value of the parameter "ok_if_congruent_modulus" for the current call to the service (as you can see in the opening message). The role/use of the parameter "ok_if_congruent_modulus" is mentioned in the pages of the help or synopsis services (and possibly also in the statement of the problem).'
more: 'Indeed, the well-formed formulas with {ENV["n_pairs"]} pairs of open-closed parentheses are strictly more than {ENV["risp"]}. If you do not believe this, you can check it out with the service check_sol_set.'
why_pertinent: 'And be told that the well-formed formulas with {ENV["n_pairs"]} pairs of open-closed parentheses are anyhow strictly less than {ENV["ok_if_congruent_modulus"]}, which is the value of the parameter "ok_if_congruent_modulus" for the current call to this service, as you can always check in the opening message.'
less: 'Indeed, the well-formed formulas with {ENV["n_pairs"]} pairs of open-closed parentheses are actually strictly less than {ENV["risp"]}. You can check this out through the service check_sol_set.'
no_pertinent: 'First, be told that the number of well-formed formulas with {ENV["n_pairs"]} pairs of open-closed parentheses overflows the value {ENV["ok_if_congruent_modulus"]} for the parameter "ok_if_congruent_modulus" as set for the current call to this service.'
bigger-risp: 'This said, the correct value for the parameter risp is bigger than {ENV["risp"]}, though it would be here not proper to make assertions regarding the true number of solutions.'
smaller-risp: 'This said, the correct value for the parameter risp is smaller than {ENV["risp"]}, though it would be here not proper to make assertions regarding the true number of solutions.'
