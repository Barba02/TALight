%YAML 1.2
---
open-channel: '# I will serve: problem={problem}, service={service}\n#  with arguments: '
feedback_source: '# These information in english come from the following files\n#   the phrases externally structuring the help sheets of the synopsis service come from the file \''.../TALight/universal_services/synopsis/synopsis_feedbackBook.hardcoded_ext.yaml\''\n#   the problem specific information for the service this help sheet is about (service {self.ENV.service} of the problem {self.ENV.problem})  come from a dictionary of the feedback phrases of the service (more precisley, the .yaml file ({self.messages_book_file})\''.'

#NOW THE PROBLEM SERVICE SPECIFIC SECTION:

not-equal: '# No. You solution is NOT correct. The number of well-formed formulas with {n_pairs} pairs of parentheses is:\n {risp_correct}. Not {risp}.'
not-equiv: '#No. You solution is not correct. The number of well-formed formulas with {n_pairs} pairs of parentheses is {risp_correct}. Taken modulus {ENV["answ_modulus"]} this value boils down to {risp_correct % ENV["answ_modulus"]}. Not {risp}.'
seems-correct-weak: '# Ok. :)  Your solution correctly computes the number of well formed formulas up to {n_pairs} pairs of parentheses.'
not-efficient: '# No. Your solution is not efficient. Run on your machine, it took more than one second to compute the number of well-formed formulas with {n_pairs} pairs of parentheses.'
seems-correct-strong: '# Ok. :)  Your solution appears to be correct (checked on several instances).'
efficient: '# Ok. :)  Your solution is efficient: its running time is logarithmic in the number of formulas it counts.'
