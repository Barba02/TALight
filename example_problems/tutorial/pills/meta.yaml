public_folder: public
services:
  check_one_sol:
    evaluator: [python, services/check_one_sol_server.py]
    args:
      input_sol:
        regex:  ^(I|H){0,1000}$
      silent:
        regex: ^(0|1)$
        default: 0
      lang:
        regex: ^(en|it)$
        default: it
  check_num_sol:
    evaluator: [python, services/check_num_sol_server.py]
    args:
      num_pills:
        regex: ^(0|[1-9][0-9]{0,1}|100)$
      risp:
        regex: ^(0|[1-9][0-9]{0,50})$
      ok_if_congruent_modulus:
        regex: ^(0|[1-9][0-9]{0,10})$
#        default: 0
        default: 1000000007
      more_or_less_hint_if_wrong:
        regex: ^(0|1)$
        default: 0
      silent:
        regex: ^(0|1)$
        default: 0
      lang:
        regex: ^(en|it)$
        default: it
  eval_num_sol:
    evaluator: [python, services/python/simple/eval_num_sol_server.py]
    args:
      answ_modulus:
        regex: ^([1-9][0-9]{0,10})$
#        default: 0
        default: 1000000007
      lang:
        regex: ^(en|it)$
        default: it
  check_sol_set:
    evaluator: [python, services/python/simple/check_sol_set_server.py]
    args:
      feedback:
        regex: ^(yes_no|tell_a_minimal_missing_prefix|give_one_missing)$
        default: yes_no
      lang:
        regex: ^(en|it)$
        default: it
  check_sol_list:
    evaluator: [python, services/python/simple/check_sol_list_server.py]
    args:
      sorting_criterion:
        regex: ^(loves_integer_pills|loves_half_pills)$
        default: loves_integer_pills
      feedback:
        regex: ^(yes_no|spot_first_wrong_consec|tell_first_minimal_missing_prefix|give_first_missing)$
        default: yes_no
      lang:
        regex: ^(en|it)$
        default: it
  check_next_sol_gen:
    evaluator: [python, services/python/simple/check_next_sol_gen_server.py]
    args:
      current_sol:
        regex:  ^(I|H){1,1000}$
      next_sol:
        regex:  ^(I|H){1,1000}$
      sorting_criterion:
        regex: ^(loves_integer_pills|loves_half_pills)$
        default: loves_integer_pills
      tell_maximal_correct_feedback:
        regex: ^(0|1)$
        default: 0
      lang:
        regex: ^(en|it)$
        default: it
  eval_next_sol_gen:
    evaluator: [python, services/python/simple/eval_next_sol_gen_server.py]
    args:
      sorting_criterion:
        regex: ^(loves_integer_pills|loves_half_pills)$
        default: loves_integer_pills
      lang:
        regex: ^(en|it)$
        default: it
  check_rank_of_sol:
    evaluator: [python, services/check_rank_of_sol.py]
    args:
      one_solution:
        regex:  ^(I|H){0,1000}$
      sorting_criterion:
        regex: ^(dislike_half_pills|dislike_integer_pills)$
        default: dislike_half_pills
      lang:
        regex: ^(en|it)$
        default: it
  check_sol_of_rank:
    evaluator: [python, services/check_sol_of_rank.py]
    args:
      num_pills:
        regex: ^([1-9][0-9]{0,1}|100)$
      rank:
        regex: ^([1-9]|1[0-9]{0,1}|20)$
      sorting_criterion:
        regex: ^(dislike_half_pills|dislike_integer_pills)$
        default: dislike_half_pills
      lang:
        regex: ^(en|it)$
        default: it
  eval_rank_of_sol:
    evaluator: [python, services/eval_rank_of_sol.py]
    args:
      sorting_criterion:
        regex: ^(dislike_half_pills|dislike_integer_pills)$
        default: dislike_half_pills
      lang:
        regex: ^(en|it)$
        default: it
  eval_sol_of_rank:
    evaluator: [python, services/eval_sol_of_rank.py]
    args:
      sorting_criterion:
        regex: ^(dislike_half_pills|dislike_integer_pills)$
        default: dislike_half_pills
      lang:
        regex: ^(en|it)$
        default: it
