%YAML 1.2
---
public_folder: public
services:
  check_scoring_competence:
    description: Your scoring competence is assessed. You are given both the secret code and a probing code that you should score against the former according to the rules.
    evaluator: [python3, services/check_scoring_competence_server.py]
    args:
      num_pegs:
        regex: ^([1-9])$
        default: 4
      num_colors:
        regex: ^([2-8])$
        default: 6
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        default: random_seed
        explain: specify the numeric code to reproduce the very same instance as in a previous run (also in other services). Called with seed=random_seed, the service chooses its seed at random (and communicates it to the user).
      feedback:
        regex: ^(yes_no|black_white|provide_correct_score)$
        default: yes_no
        explain: "choose the feedback level. Options are as follows:"
        explain1: "[yes_no]  just confirm me that my score is correct ."
        explain2: "[black_white]  just confirm me that my score is correct ."
        explain3: "[provide_correct_score]  please, when my score is not correct, provide me the correct one."
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  tell_score:
    description: You provide both the secret code and a probing code that will be scored against the secret code according to the rules of the game.
    evaluator: [python3, services/tell_score_server.py]
    args:
      secret_code:
        regex: ^(([0-9] *){0,9})$
      probing_code:
        regex: ^(([0-9] *){0,9})$
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  play:
    evaluator: [python3, services/play_server.py]
    args:
      max_num_attempts:
        regex: ^([1-9]|[1-4][0-9]|50)$
        default: 10
        explain: a number from 1 to 50, the number of questions posed to the problem solver to test the competence
      num_pegs:
        regex: ^([1-9])$
        default: 4
      num_colors:
        regex: ^([2-8])$
        default: 6
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        default: random_seed
        explain: specify the numeric code to reproduce the very same instance as in a previous run (also in other services). Called with seed=random_seed, the service chooses its seed at random (and communicates it to the user).
      adversary:
        regex: ^(random|malicious)$
        default: random
        explain: "choose the difficulty of the game. Options are as follows:"
        explain1: "[random]  the game starts with the choice of a secret code (uniform at random)."
        explain2: "[malicious]  your adversary does not commit to a specific secret code at the start of the game but decides it during the match with the aim to resist as long as possible to your attempts."
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  eval:
    evaluator: [python3, services/eval_server.py]
    args:
      max_num_attempts:
        regex: ^([1-9]|[1-4][0-9]|50)$
        default: 10
        explain: a number from 1 to 50, the number of questions posed to the problem solver to test the competence
      num_matches:
        regex: ^([1-9]|[1-4][0-9]|50)$
        default: 10
        explain: a number from 1 to 50, the number of match posed to the problem solver to test the competence
      num_pegs:
        regex: ^([1-9])$
        default: 4
      num_colors:
        regex: ^([2-8])$
        default: 6
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        default: random_seed
        explain: specify the numeric code to reproduce the very same instance as in a previous run (also in other services). Called with seed=random_seed, the service chooses its seed at random (and communicates it to the user).
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  synopsis:
    evaluator: [python3, services/synopsis/synopsis_server.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: any string without space characters but meant to specify one of the services of the problem {problem}
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
...
