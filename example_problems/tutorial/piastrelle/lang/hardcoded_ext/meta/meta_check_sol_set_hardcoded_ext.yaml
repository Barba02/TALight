%YAML 1.2
---
public_folder: public
services:
check_one_sol:
check_num_sol:
eval_num_sol:
check_sol_set:
  evaluator: [python, services/check_sol_set_server.py]
  args:
    feedback:
      regex: ^(yes_no|dispell_longest_seen_prefix_of_a_missing_sol|tell_minimal_missing_prefix|give_a_missing_sol|tell_a_missing_prefix_of_len_[1-9][0-9]{0,10})$
      default: yes_no
      explain: the options are as follows
      explain1: -yes_no= just tell me if I am missing one solution.
      explain2: -dispell_longest_seen_prefix_of_a_missing_sol= please, of one solution I am missing, give me the longest prefix it has in common with a solution I have given.
      explain3: -tell_minimal_missing_prefix= please, of one solution I am missing, give me a long enough prefix so that if I complete it to a feasible solution I get a new one.
      explain4: -give_a_missing_sol= just spoil me out a solution I have missed.
      explain5: -tell_a_missing_prefix_of_len_?= please, of one solution I am missing, give me the prefix of the specified length (the number put in place of ?).
    lang:
      regex: ^(hardcoded|hardcoded_ext|en|it)$
      default: it
check_sol_list:
eval_sol_list:
check_next_sol_gen:
eval_next:
check_rank_of_sol:
check_unrank:
eval_rank:
eval_unrank:
synopsis:
...
