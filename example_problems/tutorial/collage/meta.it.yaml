%YAML 1.2
---
public_folder: public
services:

###
# SERVIZIO SOLVE
###
  solve:
    evaluator: [python, services/solve_driver.py]
    description: 'Questo servizio fornisce una soluzione per una data istanza del problema del Collage. Puoi caricare un file contenente l`istanza sul gestore di istanze del servizio, utilizzando l`opzione `-f` del sottocomando `connect` di `rtal`, oppure provare a inserire la tua istanza direttamente dal terminale una volta che il servizio è stato avviato. Inoltre puoi generare una istanza pseudo-casuale specificandone le caratteristiche quali la lunghezza dell`istanza e il numero massimo di colori utilizzabile oppure selezionare una delle istanze disponibili nel catalogo delle istanze.'
    files:
      - instance
    args:
      source:
        regex: ^(catalogue|randgen_1|terminal)$
        default: randgen_1
        explain: 'Le istanze possono provenire dal catalogo o essere generate sul posto. Scegli un`opzione tra:\n [catalogue] il servizio restituirà un`istanza prelevata dal catalogo delle istanze memorizzate sul server. Le istanze nel catalogo sono numerate progressivamente a partire da 1. Usa l`argomento `instance_id` per specificare l`istanza che ti interessa. Chiamare questo servizio potrebbe non essere il modo più conveniente per ottenere un`istanza dal catalogo: l`intero catalogo è pubblico, cioè è contenuto nel file \''collage.tar\'' che ti viene scaricato sul tuo computer utilizzando il comando `rtal get collage`. Inoltre, se mantieni l`intero repository con il problema in locale (tutte le fonti), questo catalogo viene creato automaticamente digitando `make` per una configurazione completa del problema sulla tua macchina (questo è un passaggio necessario quando si imposta il problema su un server).\n [randgen_1] il servizio fornisce l`istanza pseudo-casuale prodotta dal generatore pseudo-casuale. Ogni generatore richiede all`utente di specificare un insieme di valori per i parametri necessari (come ad esempio il `seed`) al fine di ottenere in modo univoco l`istanza risultante. Questo set dipende dal generatore. I valori validi per questo set di parametri (chiamato "descrittore di istanza") offrono una "descrizione di istanza" che specifica in modo univoco l`istanza w.r.t. quel generatore. Assicurati quindi di passare i valori desiderati per tutti gli argomenti di servizio corrispondenti ai parametri richiesti dal generatore. Si noti che passando la stessa configurazione di valori si ottiene la stessa istanza. Ciò è utile poiché garantisce la riproducibilità di qualsiasi esperimento e la possibilità di utilizzare ed esplorare una stessa istanza con diversi servizi di questo problema.\n [terminal] il servizio utilizzerà un`istanza collage che inserirai manualmente, riga per riga.'
      instance_id:
        regex: ^([1-9][0-9]*)$
        regex-explained: any positive natural (in its decimal representation)
        regex-URL: 'https://extendsclass.com/regex/a55297b'
        default: 1
        explain: 'Questo argomento viene preso in considerazione quando source=catalogue. Viene utilizzato per identificare una particolare istanza all`interno del catalogo delle istanze archiviate sul server. L`intero catalogo è pubblico, cioè è contenuto nel file \''collage.tar\'' che viene scaricato sulla tua macchina digitando `rtal get collage`. Inoltre, se si tiene l`intero repository con il problema in locale (tutti i sorgenti), questo catalogo viene creato automaticamente emettendo `make` per una configurazione completa del problema sul server. Questo catalogo è organizzato in raccolte di istanze con la stessa origine o altre caratteristiche comuni.'
      seq_len:
        regex: ^([1-9][0-9]{0,2}|1000)$
        default: 10
        explain: 'Numero di strisce che compongono l`arcobaleno (lunghezza della sequenza).'
      num_col:
        regex: ^.*$
        default: 4
        explain: 'Numero di colori che compongono l`arcobaleno'
      mod:
        regex: ^.*$
        default: -1 
        explain: 'Modalità di generazione dell`arcobaleno: l`opzione [1] genera una sequenza con colori uguali adiacenti, mentre l`opzione [2] genera una sequenza senza colori uguali adiacenti.'
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'either the string "random_seed" or a decimal number of precisley 6 digits'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seme a caso e lo comunica all`utente oltre che all`istanza pseudo-casuale generata. Altrimenti, come seme, puoi utilizzare qualsiasi numero intero compreso tra 100000 e 999999.'
      instance_format:
        regex: ^(with_len|simple)$
        default: with_len
        explain: 'Utilizzare questo argomento per scegliere il formato del file .txt contenente l`istanza. Puoi anche richiedere l`istanza come già espressa all`interno di specifici formati di file di dati che abbiamo deciso di supportare.'
        explain1: '[with_len] contiene il numero di elementi che compongono l`arcobaleno, oltre all`arcobaleno stesso.'
        explain2: '[simple] contiene la sola sequenza di colori dell`arcobaleno.'
      silent:
        regex: ^(0|1)$
        default: 0
        explain: 'Se questo flag è impostato su 1, verrà stampata solo l`istanza. In questo modo, se reindirizzi l`output su file (>) otterrai un file di istanza valido per gli altri servizi.'
      display:
        regex: ^(0|1)$
        default: 1
        explain: 'Se questo flag è impostato su 1, il file di istanza viene mostrato dal servizio.'
      download:
        regex: ^(0|1)$
        default: 0
        explain: 'Se questo flag è impostato su 1, il file di istanza viene scaricato nella cartella il cui percorso completo è specificato tramite il flag -o (se questo percorso è relativo si trova da dove è stata emessa la chiamata di servizio).'

###
# SERVIZIO CHECK_SOL
###
  check_sol:
    evaluator: [python, services/check_sol_driver.py]
    description: 'Questo servizio ti chiede di fornire una soluzione all`istanza generata dal problema. Se la soluzione fornita è corretta, verrà visualizzato un messaggio di conferma, altrimenti si avrà un messaggio di errore.'
    args:
      source:
        regex: ^(catalogue|randgen_1|terminal)$
        default: randgen_1
        explain: 'Le istanze possono provenire dal catalogo o essere generate sul posto. Scegli un`opzione tra:\n [catalogue] il servizio restituirà un`istanza prelevata dal catalogo delle istanze memorizzate sul server. Le istanze nel catalogo sono numerate progressivamente a partire da 1. Usa l`argomento `instance_id` per specificare l`istanza che ti interessa. Chiamare questo servizio potrebbe non essere il modo più conveniente per ottenere un`istanza dal catalogo: l`intero catalogo è pubblico, cioè è contenuto nel file \''collage.tar\'' che ti viene scaricato sul tuo computer utilizzando il comando `rtal get collage`. Inoltre, se mantieni l`intero repository con il problema in locale (tutte le fonti), questo catalogo viene creato automaticamente digitando `make` per una configurazione completa del problema sulla tua macchina (questo è un passaggio necessario quando si imposta il problema su un server).\n [randgen_1] il servizio fornisce l`istanza pseudo-casuale prodotta dal generatore pseudo-casuale. Ogni generatore richiede all`utente di specificare un insieme di valori per i parametri necessari (come ad esempio il `seed`) al fine di ottenere in modo univoco l`istanza risultante. Questo set dipende dal generatore. I valori validi per questo set di parametri (chiamato "descrittore di istanza") offrono una "descrizione di istanza" che specifica in modo univoco l`istanza w.r.t. quel generatore. Assicurati quindi di passare i valori desiderati per tutti gli argomenti di servizio corrispondenti ai parametri richiesti dal generatore. Si noti che passando la stessa configurazione di valori si ottiene la stessa istanza. Ciò è utile poiché garantisce la riproducibilità di qualsiasi esperimento e la possibilità di utilizzare ed esplorare una stessa istanza con diversi servizi di questo problema.\n [terminal] il servizio utilizzerà un`istanza collage che inserirai manualmente, riga per riga.'
      instance_id:
        regex: ^([1-9][0-9]*)$
        regex-explained: any positive natural (in its decimal representation)
        regex-URL: 'https://extendsclass.com/regex/a55297b'
        default: 1
        explain: 'Questo argomento viene preso in considerazione quando source=catalogue. Viene utilizzato per identificare una particolare istanza all`interno del catalogo delle istanze archiviate sul server. L`intero catalogo è pubblico, cioè è contenuto nel file \''collage.tar\'' che viene scaricato sulla tua macchina digitando `rtal get collage`. Inoltre, se si tiene l`intero repository con il problema in locale (tutti i sorgenti), questo catalogo viene creato automaticamente emettendo `make` per una configurazione completa del problema sul server. Questo catalogo è organizzato in raccolte di istanze con la stessa origine o altre caratteristiche comuni.'
      instance_format:
        regex: ^(with_len|simple)$
        default: with_len
        explain: 'Utilizzare questo argomento per scegliere il formato del file .txt contenente l`istanza. Puoi anche richiedere l`istanza come già espressa all`interno di specifici formati di file di dati che abbiamo deciso di supportare.'
        explain1: '[with_len] contiene il numero di elementi che compongono l`arcobaleno, oltre all`arcobaleno stesso.'
        explain2: '[simple] contiene la sola sequenza di colori dell`arcobaleno.'
      seq_len:
        regex: ^([1-9][0-9]{0,2}|1000)$
        default: 10
        explain: 'Numero di strisce che compongono l`arcobaleno (lunghezza della sequenza).'
      num_col:
        regex: ^.*$
        default: 4
        explain: 'Numero di colori che compongono l`arcobaleno'
      mod:
        regex: ^.*$
        default: -1
        explain: 'Modalità di generazione dell`arcobaleno: l`opzione [1] genera una sequenza con colori uguali adiacenti, mentre l`opzione [2] genera una sequenza senza colori uguali adiacenti.'
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'either the string "random_seed" or a decimal number of precisley 6 digits'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seme a caso e lo comunica all`utente oltre che all`istanza pseudo-casuale generata. Altrimenti, come seme, puoi utilizzare qualsiasi numero intero compreso tra 100000 e 999999.'
      opt_sol_val:
        regex: ^(0|[1-9][0-9]{0,5})$
        default: 0
        explain:
      silent:
        regex: ^(0|1)$
        default: 0
        explain: 'Se questo flag è impostato su 1, verrà stampata solo l`istanza. In questo modo, se reindirizzi l`output su file (>) otterrai un file di istanza valido per gli altri servizi.'
      display:
        regex: ^(0|1)$
        default: 1
        explain: 'Se questo flag è impostato su 1, il file di istanza viene mostrato dal servizio.'

###
# GIMME_INSTANCE
###
  gimme_instance:
    evaluator: [python,services/gimme_instance_driver.py]
    description: 'Un`istanza del problema Collage consiste in una sequenza di colori, definita da parametri come la lunghezza della sequenza, il numero di colori utilizzati e il seme che la genera. Chiama questo servizio (`gimme_instance`) per ottenere un`istanza di tuo gradimento in uno dei formati supportati. L`istanza può provenire da fonti differenti (generata casualmente o appartenente a un catalogo presente sul server). Il servizio può essere utilizzato per ottenere un`istanza casuale oppure un`istanza presente nel catalogo.\nPuoi chiedere di salvare l`istanza in un file sulla tua macchina locale e/o di visualizzarla sul monitor. Per tua comodità, il formato di questa istanza può essere specificato attraverso l`argomento `instance_format`.'
    args:
      source:
        regex: ^(catalogue|randgen_1)$
        default: randgen_1
        explain: 'Le istanze possono provenire dal catalogo o essere generate sul posto. Scegli un`opzione tra:\n [catalogue] il servizio restituirà un`istanza prelevata dal catalogo delle istanze memorizzate sul server. Le istanze nel catalogo sono numerate progressivamente a partire da 1. Usa l`argomento `instance_id` per specificare l`istanza che ti interessa. Chiamare questo servizio potrebbe non essere il modo più conveniente per ottenere un`istanza dal catalogo: l`intero catalogo è pubblico, cioè è contenuto nel file \''collage.tar\'' che ti viene scaricato sul tuo computer utilizzando il comando `rtal get collage`. Inoltre, se mantieni l`intero repository con il problema in locale (tutte le fonti), questo catalogo viene creato automaticamente digitando `make` per una configurazione completa del problema sulla tua macchina (questo è un passaggio necessario quando si imposta il problema su un server).\n [randgen_1] il servizio fornisce l`istanza pseudo-casuale prodotta dal generatore pseudo-casuale. Ogni generatore richiede all`utente di specificare un insieme di valori per i parametri necessari (come ad esempio il `seed`) al fine di ottenere in modo univoco l`istanza risultante. Questo set dipende dal generatore. I valori validi per questo set di parametri (chiamato "descrittore di istanza") offrono una "descrizione di istanza" che specifica in modo univoco l`istanza w.r.t. quel generatore. Assicurati quindi di passare i valori desiderati per tutti gli argomenti di servizio corrispondenti ai parametri richiesti dal generatore. Si noti che passando la stessa configurazione di valori si ottiene la stessa istanza. Ciò è utile poiché garantisce la riproducibilità di qualsiasi esperimento e la possibilità di utilizzare ed esplorare una stessa istanza con diversi servizi di questo problema.'
      instance_id:
        regex: ^([1-9][0-9]*)$
        regex-explained: any positive natural (in its decimal representation)
        regex-URL: 'https://extendsclass.com/regex/a55297b'
        default: 1
        explain: 'Questo argomento viene preso in considerazione quando source=catalogue. Viene utilizzato per identificare una particolare istanza all`interno del catalogo delle istanze archiviate sul server. L`intero catalogo è pubblico, cioè è contenuto nel file \''collage.tar\'' che viene scaricato sulla tua macchina digitando `rtal get collage`. Inoltre, se si tiene l`intero repository con il problema in locale (tutti i sorgenti), questo catalogo viene creato automaticamente emettendo `make` per una configurazione completa del problema sul server. Questo catalogo è organizzato in raccolte di istanze con la stessa origine o altre caratteristiche comuni.'
      seq_len:
        regex: ^([1-9][0-9]{0,2}|1000)$
        default: 10
        explain: 'Numero di strisce che compongono l`arcobaleno (lunghezza della sequenza).'
      num_col:
        regex: ^.*$
        default: 4
        explain: 'Numero di colori che compongono l`arcobaleno'
      mod:
        regex: ^.*$ 
        default: -1
        explain: 'Modalità di generazione dell`arcobaleno: l`opzione [1] genera una sequenza con colori uguali adiacenti, mentre l`opzione [2] genera una sequenza senza colori uguali adiacenti.'
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'either the string "random_seed" or a decimal number of precisley 6 digits'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seme a caso e lo comunica all`utente oltre che all`istanza pseudo-casuale generata. Altrimenti, come seme, puoi utilizzare qualsiasi numero intero compreso tra 100000 e 999999.'
      instance_format:
        regex: ^(with_len|simple|collage_dat)$
        default: with_len
        explain: 'Utilizzare questo argomento per scegliere il formato del file .txt contenente l`istanza. Puoi anche richiedere l`istanza come già espressa all`interno di specifici formati di file di dati che abbiamo deciso di supportare.'
        explain1: '[with_len] contiene il numero di elementi che compongono l`arcobaleno, oltre all`arcobaleno stesso.'
        explain2: '[simple] contiene la sola sequenza di colori dell`arcobaleno.'
      silent:
        regex: ^(0|1)$
        default: 0
        explain: 'Se questo flag è impostato su 1, verrà stampata solo l`istanza. In questo modo, se reindirizzi l`output su file (>) otterrai un file di istanza valido per gli altri servizi.'
      display:
        regex: ^(0|1)$
        default: 1
        explain: 'Se questo flag è impostato su 1, il file di istanza viene mostrato dal servizio.'
      download:
        regex: ^(0|1)$
        default: 0
        explain: 'Se questo flag è impostato su 1, il file di istanza viene scaricato nella cartella il cui percorso completo è specificato tramite il flag -o (se questo percorso è relativo si trova da dove è stata emessa la chiamata di servizio).'

###
# SERVIZIO EVAL_SOL
###
  eval_sol:
    description: 'Questo servizio valuta il tuo codice che calcola il numero minimo di fogli che compongono il Collage.'
    evaluator: [python, services/eval_sol_driver.py]
    files:
      - sourcecode
    args:
      goal:
        explain: 'set your goal (efficient includes also correct).'
        regex: ^(correct|time_at_most_2_exp_n|time_at_most_n_exp_2)$
        default: correct
      code_lang: 
        explain: 'Speficica il linguaggio con cui è scritto il bot. Più conosciamo del tuo bot, più possiamo stimare l`efficienza del tuo algoritmo.'
        regex: ^(python|java|nodejs|compiled)$
        default: python
      seed:
        explain: 'Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seme a caso e lo comunica all`utente oltre che all`istanza pseudo-casuale generata. Altrimenti, come seme, puoi utilizzare qualsiasi numero intero compreso tra 100000 e 999999.'
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        default: random_seed


###
# ALTRO
###
  help:
    evaluator: [python, services/help/help_driver.py]
    args:
      page:
        regex: ^(approx_vc|service_1|help|synopsis)$
        default: help
      lang:
        regex: ^(en|it)$
        default: it

  synopsis:
    evaluator: [python, services/synopsis/synopsis_driver.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: any string without space characters but meant to specify one of the services of the problem %(problem)s
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
      metafile:
        regex: ^(main|en|it)$
        default: main
