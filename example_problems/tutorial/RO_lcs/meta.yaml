%YAML 1.2
---
public_folder: public
services:
  check:
    evaluator: [python, services/check_driver.py]
    args:
      s:
        regex: ^([A-Z]*)$
        default: ACCIPICCHIA
      t:
        regex: ^([A-Z]*)$
        default: MAMMACHIOCCIA
      start_with:
        regex: ^(x|[A-Z])$
        default: x
      end_with:
        regex: ^(x|[A-Z])$
        default: x
      forbidden_s_interval_first_pos:
        regex: ^(-1|0|[1-9][0-9]*)$
        default: -1
      forbidden_s_interval_last_pos:
        regex: ^(-1|0|[1-9][0-9]*)$
        default: -1
      sol_type:
        regex: ^(opt_sol|opt_val|opt_sol_with_val|DPtable_prefix|DPtable_suffix)$
        default: opt_sol_with_val
      opt_sol:
        regex: ^([A-Z]*)$
        default: ACCIA
      opt_val:
        regex: ^(.*)$
        default: 5
      DPtable_prefix:
        regex: ^(.*)$
        default: "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ]"
      DPtable_suffix:
        regex: ^(.*)$
        default: "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ]"
      name_of_opt_val:
        regex: ^(.*)$
        default: opt_val
      name_of_opt_sol:
        regex: ^(.*)$
        default: opt_sol
      name_of_DPtable:
        regex: ^(.*)$
        default: DPtable
      initDPtable_prefix:
        regex: ^(.*)$
        default: "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] ]"
      initDPtable_suffix:
        regex: ^(.*)$
        default: "[[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] ]"
      color_implementation:
        regex: ^(ANSI|html|None)$
        default: ANSI
      as_yaml_with_points:
        regex: ^(0|1)$
        default: 0
      with_output_files:
        regex: ^(0|1)$
        default: 0
      recall_input:
        regex: ^(0|1)$
        default: 0
      with_opening_message:
        regex: ^(0|1)$
        default: 0
      pt_formato_OK:
        regex: ^(0|[1-9][0-9]*)$
        default: 0
      pt_feasibility_OK:
        regex: ^(0|[1-9][0-9]*)$
        default: 1
      pt_tot:
        regex: ^(0|[1-9][0-9]*)$
        default: 10
      esercizio:
        regex: ^(0|[1-9][0-9]*)$
        default: -1
      task:
        regex: ^(0|[1-9][0-9]*)$
        default: -1
  oracle:
    evaluator: [python, services/oracle_driver.py]
    args:
      pwd:
        regex: ^(.*)$
      s:
        regex: ^([A-Z]*)$
        default: ACCIPICCHIA
      t:
        regex: ^([A-Z]*)$
        default: MAMMACHIOCCIA
      start_with:
        regex: ^(x|[A-Z])$
        default: x
      end_with:
        regex: ^(x|[A-Z])$
        default: x
      forbidden_s_interval_first_pos:
        regex: ^(-1|0|[1-9][0-9]*)$
        default: -1
      forbidden_s_interval_last_pos:
        regex: ^(0|[1-9][0-9]*)$
        default: -1
      sol_type:
        regex: ^(opt_sol|opt_val|opt_sol_with_val|DPtable_prefix|DPtable_suffix|all)$
        default: all
      name_of_opt_val:
        regex: ^(.*)$
        default: opt_val
      name_of_opt_sol:
        regex: ^(.*)$
        default: opt_sol
      name_of_DPtable:
        regex: ^(.*)$
        default: DPtable
      as_yaml:
        regex: ^(0|1)$
        default: 0
      recall_input:
        regex: ^(0|1)$
        default: 0
      with_opening_message:
        regex: ^(0|1)$
        default: 0
      esercizio:
        regex: ^(0|[1-9][0-9]*)$
        default: -1
      task:
        regex: ^(0|[1-9][0-9]*)$
        default: -1

  synopsis:
    evaluator: [python, services/synopsis/synopsis_driver.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: any string without space characters but meant to specify one of the services of the problem {problem}
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: en
      metafile:
        regex: ^(main|en|it)$
        default: main
...
