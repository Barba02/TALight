public_folder: public
services:
  free_weigh:
    explain: "you have n coins, one of which is false, you weigh them to find the position of it."
    evaluator: [python, services/free_weight_server.py]
    args:
      n:
        regex: ^[1-9][0-9]?$|^100$
        default: 10
        explain: "Number of coins"
      obj:
        regex: ^(any|max_product)$
        default: any
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
  compact_solution:
    explain: "We provide you n coins and weighing sequence that leads to finding the counterfeit coin. It is necessary to shorten this sequence."
    evaluator: [python, services/compact_solution_server.py]
    args:
      n:
        regex: ^[1-9][0-9]?$|^100$
        default: 10
        explain: "Number of coins"
      # TODO goal
      please_do_it_for_me:
        regex: ^(0|1)$
        default: 0
        explain: "If your solution is not correct we give you the right one."
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
  check_sol:
    explain: "You can check a solution of yours for an instance (yours or generated at random)."
    evaluator: [python, services/check_sol_server.py]
    args:
      instance:
        regex: ^(mine|random)$
        default: random
        explain: "Mine: i give my instace, random: random instance."
      seed:
        regex: ^([1-9]\d{2,7}|any)$
        default: any
        explain: "Called with seed=any, the service chooses its seed at random (and communicates it to the user)"
      coding:
        regex: ^(seq|subset)$
        default: seq
        explain: "seq: List of commands, where a command is the possibility to remove or put coins on the right or left plate "
        # TODO example
      lang:
        regex: ^(hardcoded|en|it)$
      default: it
  #  TODO ricorsione:
  help:
    evaluator: [python, services/help/help_server.py]
    args:
      page:
        regex: ^(sum|free_sum|sum_and_difference|sum_and_product|help|synopsis)$
        default: help
      lang:
        regex: ^(en|it)$
        default: it
  synopsis:
    evaluator: [python, services/synopsis/synopsis_server.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: "any string without space characters but meant to specify one of the services of the problem {problem}"
      lang:
        regex: ^(hardcoded|en|it)$
        default: it

