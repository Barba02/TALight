public_folder: public
services:
  check_static_strategy:
    explain: "choose an n and specify a sequence of measurements with the scale that allows to always identify among n coins the false one."
    evaluator: [python3, services/check_static_strategy/check_static_strategy_server.py]
    args:
      n:
        regex: ^[1-9][0-9]?$|^100$
        default: 7
        explain: "Number of coins (1-100)"
      version: 
        regex: ^(false_is_leighter|false_is_heavier|false_has_different_weight)$
        default: false_is_leighter
      feedback:
        regex: ^(yes_no|provide_counterexample|optimal)$
        default: yes_no
        explain: choose the feedback level. Options are as follows
        explain1: -yes_no= just tell me if my strategy is correct (correct does not imply optimal)
        explain2: -provide_counterexample= please, explain me why my strategy is not correct
        explain3: -optimal= please, confirm me whether I am using the scale the minimum possibile number of times
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
  check_dynamic_strategy:
    explain: "Your goal is to identify the false coin in a set of n coins. Choose an n and play a two-players game against nature: at every move you operate a scale to compare the weights of two disjoint subsets of the n coins and nature reports you the outcome."
    evaluator: [python3, services/check_dynamic_strategy/check_dynamic_strategy_server.py]
    args:
      n:
        regex: ^[1-9][0-9]?$|^100$
        default: 7
        explain: "Number of coins (1-100)"
      version: 
        regex: ^(false_is_leighter|false_is_heavier|false_has_different_weight)$
        default: false_is_leighter
      feedback: 
        regex: ^(yes_no|provide_counterexample|optimal)$
        default: yes_no
        explain: choose the feedback level. Options are as follows
        explain1: -yes_no= just tell me if my strategy is correct (correct does not imply optimal)
        explain2: -provide_counterexample= please, explain me why my strategy is not correct
        explain3: -optimal= please, confirm me that my strategy never uses the scale more then opt times. Here opt is the largest number such that every dynamic strategy is due to take at least opt moves in some cases.
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
  empass_static_strategy_lighter_or_heavier:
    explain: "this service proves that, for an infinite number of n, two experiments are not enough to understand whether the false coin is heavier or lighter than the others. To do so, you provide us with a lower bound lb and we return you the smalles n >= lb such that no static strategy with only two expriments exists. You then provide us a static strategy for that n, with at most two experiments, and we explain why your static strategy fails."
    evaluator: [python3, services/empass_static_strategy_lighter_or_heavier/empass_static_strategy_lighter_or_heavier_server.py]
    args:
      lb:
        regex: ^[1-9][0-9]?$|^100$
        default: 7
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
  # TODO help
  help:
    evaluator: [python, services/help/help_server.py]
    args:
      page:
        regex: ^(sum|free_sum|sum_and_difference|sum_and_product|help|synopsis)$
        default: help
      lang:
        regex: ^(en|it)$
        default: it
  synopsis:
    evaluator: [python, services/synopsis/synopsis_server.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: "any string without space characters but meant to specify one of the services of the problem {problem}"
      lang:
        regex: ^(hardcoded|en|it)$
        default: it

