%YAML 1.2
---
public_folder: public
services:
check_one_sol:
  description: this service checks whether a sequence of moves is a valid solution for the Hanoi tower puzzle.
  evaluator: [python, services/check_one_sol_server.py]
  args:    
    v:      
      regex:  ^(classic|toddler|clockwise)$
      default: classic
    start:
      regex:  ^((A|B|C){0,1000}|all_A|all_B|all_C)$
      default: all_A
      explain: initial configuration of the puzzle
    final:
      regex:  ^((A|B|C){0,1000}|all_A|all_B|all_C)$
      default: all_C
      explain: target configuration for the puzzle
    n:
      regex: ^(-1|0|[1-9][0-9]{0,2}|1000)$
      default: -1 # implicit
      explain: the number of disks (required only when it can not be inferred from the initial or target configuration).
    format:
      regex: ^(minimal|extended)$
      default: minimal
      explain: "The move format. there are two type of format (D=disk, C=current_peg, T=target_peg):"
      explain1: "-minimal= D:CT"
      explain2: "-extended= move disk D from C peg to T peg"
    goal:
      regex:  ^(admissible|optimal|simple_walk|check_only_disk)$
      default: admissible
      explain: the options are as follows
      explain1: -admissible= just check that the solution is an admissible one.
      explain2: -optimal= the solution is required to use a minimum possible number of moves.
      explain3: -simple_walk= the solution is required to be admissible and not to visit a same configuration more than once.
      explain4: -check_only_disk= the solution is required to move the correct disk to obtain the optimal solution.
    feedback:
      regex: ^(yes_no|spot_first_non_optimal_move|gimme_shorter_solution|gimme_optimal_solution)$
      default: yes_no
      explain: the options are as follows
      explain1: -yes_no= provide the minimum possible amount of feedback.
      explain2: -spot_first_non_optimal_move= spots the first move that compromises reaching the target configuration in the smallest possible number of moves.
      explain3: -gimme_shorter_solution= offers the certificate of non-optimality in the form of a shorter solution.
      explain4: -gimme_optimal_solution= offers an optimal solution.
    lang:
      regex: ^(hardcoded|hardcoded_ext|en|it)$
      default: it

check_opt_num_moves:
check_lower_bounds:

play_like:
gen_random_puzzle:
eval_opt_num_moves:

eval_sol:
synopsis:
...
