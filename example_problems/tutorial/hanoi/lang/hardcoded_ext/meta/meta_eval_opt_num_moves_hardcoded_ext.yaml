%YAML 1.2
---
public_folder: public
services:
check_one_sol:

check_opt_num_moves:
check_lower_bounds:

play_like:
gen_random_puzzle:
eval_opt_num_moves:
  description: this service valuated correctness and efficiency of a bot that computes the minimum number of moves needed to solve an Hanoi tower puzzle.
  evaluator: [python, services/eval_opt_num_moves_server.py]
  args:
    v:
      regex:  ^(classic|toddler|clockwise)$
      default: classic
    start:
      regex:  ^(all_A|all_B|all_C|general)$
      default: all_A
      explain: initial configuration of the puzzle.
    final:
      regex:  ^(all_A|all_B|all_C|general)$
      default: all_C
      explain: target configuration for the puzzle.
    ok_if_congruent_modulus:
      regex: ^([1-9][0-9]{0,10}|0)$
      default: 0 #alternative: 1000000007
      explain: when the number of disks grows the number of moves can be huge. Set this argument to 0 if you are ready to deal with arbitrarily large numbers. Otherwise, computing the number modulo <ok_if_congruent_modulus> will suffice in assessing you got the right ideas.  
    goal:
      regex: ^(correct|efficient)$
      default: correct
      explain: set your goal (efficient includes also correct).
    seed:
      regex: ^(-1|[1-9][0-9]{5,5})$
      default: -1 #random_seed
      explain: specify the numeric code to reproduce the very same set of instances as in a previous run. Called with seed=random_seed, the service chooses its seed at random (and communicates it to the user).
    num_tests:
      regex: ^(0|1000|([1-9][0-9]{0,2}))$
      default: 50
      explain: specify the number of tests to run.
    n_max:
      regex: ^(0|1000|([1-9][0-9]{0,2}))$
      default: 10
      explain: specify the maximum number of disks to be tested.
    code_lang:
      regex: ^(python|java|nodejs|compiled)$
      default: python
      explain: the more we know about your bot the better we can estimate the efficiency of your algorithm.
    lang:
      regex: ^(hardcoded|hardcoded_ext|en|it)$
      default: it

eval_sol:
synopsis:
...
