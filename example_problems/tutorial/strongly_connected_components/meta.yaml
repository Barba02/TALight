public_folder: public
services:
  check_is_gsc:
    explain: "This service will check your statement that a directed graph you provide us is strongly connected"
    evaluator: [python,services/is_gsc_server.py]
    args:     
      n:
        regex: ^([1-9][0-9]{0,2}|1000|lazy)$
        default: lazy
        explain: "Number of nodes."
      m:
        regex: ^([1-9][0-9]{0,2}|1000|lazy)$
        default: lazy
        explain: "Number of arcs."
      sc:
        regex: ^(yes)$
        default: yes
      goal:
        regex: ^(correct|with_certificate)$
        default: correct
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
  check_is_not_gsc:
    explain: "This service will check your statement that a directed graph you provide us is not strongly connected"
    evaluator: [python,services/is_not_gsc_server.py]
    args:
      n:
        regex: ^([1-9][0-9]{0,2}|1000|lazy)$
        default: lazy
        explain: "Number of nodes."
      m:
        regex: ^([1-9][0-9]{0,2}|1000|lazy)$
        default: lazy
        explain: "Number of arcs."
      sc:
        regex: ^(no)$
        default: no
      goal:
        regex: ^(correct|with_certificate)$
        default: correct
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
  eval_gsc:
    explain: "Given a directed graph, can you decide whether it is strongly connected?"
    evaluator: [python,services/eval_gsc_server.py]
    args:
      goal:
        regex: ^(yes_no)$
        default: yes_no
      code_lang: 
        regex: ^(python|java|nodejs|compiled)$
        default: python
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
  gimme_scc:
    explain: "This service will check the strongly connected components of a graph that you provide us"
    evaluator: [python,services/gimme_scc_server.py]
    args:   
      n:
        regex: ^([1-9][0-9]{0,2}|1000|lazy)$
        default: lazy
        explain: "Number of nodes."
      m:
        regex: ^([1-9][0-9]{0,2}|1000|lazy)$
        default: lazy
        explain: "Number of arcs."
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
  eval_find_scc:
    explain: "Given a directed graph, can you find its strongly connected components?"
    evaluator: [python,services/eval_find_scc_server.py]
    args:
     goal:
        regex: ^(yes_no)$
        default: yes_no
     code_lang: 
        regex: ^(python|java|nodejs|compiled)$
        default: python
     lang:
        regex: ^(hardcoded|en|it)$
        default: it
  synopsis:
    evaluator: [python, services/synopsis/synopsis_server.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
      lang:
        regex: ^(hardcoded|en|it)$
        default: it
