%YAML 1.2
---
public_folder: public
services:
check_is_eulerian: 
check_is_not_eulerian:
check_eulerian_walk:
eval_eulerian_walk_checker:
eval_eulerian_recognize:
trilly_decision:
trilly_construction:
  evaluator: [python, services/trilly_construction_server.py]
  description: "Trilly the fairy helps you construct an Eulerian walk within a graph that admits at least one. When you call this service a dialogue is set up where, after being given a graph G, you can call trilly to get her advice as follows: you specify one single arc of G (an ordered pair of nodes) and ask trilly to return you an eulerian walk of the graph obtained from G with the removal of such an arc. Trilly will either tell you that no such a walk exists or return you one. You can call trilly as many times as you want but, in the end, you must provide an eulerian walk of G."
  args:
    n:
      regex: ^([1-9]|10|20|50|100|1000|10000)$
      default: 10
      explain: Choose the number of nodes for the random graph G that will be offered you.
    m:
      regex: ^([1-9]|10|20|50|100|1000|10000)$
      default: 10
      explain: Choose the number of arcs for the random graph G that will be offered you.
    num_calls:
      regex: ^(at_most_1|at_most_2|at_most_n|at_most_m|any)$
      default: any
      explain1: "Number of allowed Trilly calls."
      explain2: Number of allowed Trilly calls.
    seed:
      explain: "specify the numeric code to reproduce the very same psudo-random instance G as in a previous run. Called with seed=random_seed, the service chooses its seed at random (and communicates it to the user)."
      regex: ^(random_seed|[1-9][0-9]{0,5})$
      default: random_seed
    lang:
      regex: ^(hardcoded|hardcoded_ext|en|it)$
      default: it
synopsis:
...
