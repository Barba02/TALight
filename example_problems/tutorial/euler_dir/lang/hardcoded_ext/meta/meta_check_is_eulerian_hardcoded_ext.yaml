%YAML 1.2
---
public_folder: public
services:
check_is_eulerian: 
  description: This service will check your assertion that a directed graph (that you provide us) admits an eulerian walk (of the specified type).
  evaluator: [python,services/is_eulerian_server.py]
  args:     
    walk_type:
      regex: ^(open|closed|any)$
      default: closed
    feedback:
      regex: ^(yes_no|with_YES_certificate)$
      default: yes_no
      explain:  (we could then remove this argument. 2021-08-06, Romeo) when the feedback parameter is set to "with_YES_certificate" and the graph admits an eulerian walk of type "walk_type" then the service returns you one such walk. Otherwise the service will only confirm you that such a walk exists, or deny your assertion.
    eulerian:
      regex: ^1$
      default: 1
    MAXN:
      regex: ^100$
      default: 100
      explain: The number of nodes of your graph cannot exceed MAXN.
    MAXM:
      regex: ^1000$
      default: 1000
      explain: The number of arcs of your graph cannot exceed MAXM.
    check_my_YES_certificate:
      regex: ^(0|1)$
      default: 0
      explain: (introduced 2021-08-06, Romeo) when this flag is set to 1 then the service also receives an eulerian walk of type "walk_type" for the received graph, and checks the validity of this walk.
    check_my_NO_certificate:
      regex: ^0$
      default: 0
    gimme_your_YES_certificate:
      regex: ^(0|1)$
      default: 0
      explain: (introduced 2021-08-06, Romeo) when this flag is set to 1 and it is indeed true that the graph admits an eulerian walk of type "walk_type", then the service also returns one such walk.
    gimme_your_NO_certificate:
      regex: ^0$
      default: 0
    lang:
      regex: ^(hardcoded|hardcoded_ext|en|it)$
      default: it
    
check_is_not_eulerian:
check_eulerian_walk:
eval_eulerian_walk_checker:
eval_eulerian_recognize:
trilly_decision:
trilly_construction:
synopsis:
...
