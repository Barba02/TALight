%YAML 1.2
---
public_folder: public
services:
  compact_solution:
  order_of_rows_columns:
  sub_closure:
    description: You are asked to prove that a 0/1-matrix containing a bad submatrix is also bad. We give you a good 0/1-matrix and a sequence of swich row/column operations turnig it off (a certificate of goodness). You are required to give us a certificate of goodness for a 0/1-submatrix specified by us.
    evaluator: [python, services/sub_closure_server.py]
    args:
      m:
        regex: ^([1-9][0-9]{0,1})$
        default: 10
        explain: Number of rows of the big matrix.
      n:
        regex: ^([1-9][0-9]{0,1})$
        default: 10
        explain: Number of columns of the big matrix.
      submatrix_type:
        regex: ^(consecutive|any)$
        default: consecutive
        explain: Type of submatrix.
        explain1: "[consecutive]  the submatrix comprises the first m_small rows and the first n_small columns of the big matrix. See also the service order_of_rows_columns to see why this is actually a general consecutive submatrix."
        explain2: "[any]  the service server provides two random 0/1-vectors of length m and n, respectively. These characteristic vectors specify the rows and columns of the submatrix."
      seed:
        explain: specify the numeric code to reproduce the very same psudo-random instance as in a previous run. Called with seed=random_seed, the service chooses its seed at random (and communicates it to the user).
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        default: random_seed
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  check_unsol:
  check_sol:
  eval_decision:
  eval_sol:
  trilly:
  synopsis:
...
