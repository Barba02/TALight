%YAML 1.2
---
open-channel: '# I will serve: problem={problem}, service={service}\n#  with arguments: '
feedback_source: '# These information in english come from the following files\n#   the phrases externally structuring the help sheets of the synopsis service come from the file \''.../TALight/universal_services/synopsis/synopsis_feedbackBook.hardcoded_ext.yaml\''\n#   the problem specific information for the service this help sheet is about (service {self.ENV.service} of the problem {self.ENV.problem})  come from a dictionary of the feedback phrases of the service (more precisley, the .yaml file ({self.messages_book_file})\''.'

#NOW THE PROBLEM SERVICE SPECIFIC SECTION:

not-correct: '# No. Your solution is NOT correct. The next wff is\n {risp_correct}. Not\n {risp}.'
seems-correct-weak: '# Ok. Your solution correctly computes the well formed tiling immidiately following a given one (checked with tilings of a corridor of dimension 1x{n}).'
not-efficient: '# No. You solution is NOT efficient. When run on your machine, it took more than one second to compute the next well-formed tiling of a corridor of dimension 1x{n}.'
seems-correct-strong: '# Ok. Your solution appears to be correct (checked on several instances).'
efficient: '# Ok. Your solution is efficient: its running time is polynomial in the length of the formulas it manipulates.'
