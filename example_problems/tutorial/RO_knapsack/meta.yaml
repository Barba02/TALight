%YAML 1.2
---
public_folder: public
services:
  checker:
    evaluator: [python, services/checker_driver.py]
    args:
      elementi:
        regex: ^(.*)$
        default: "['A', 'B', 'C', 'D', 'E']"
      pesi:
        regex: ^(.*)$
        default: "[2, 3, 4, 29, 50]"
      valori:
        regex: ^(.*)$
        default: "[13, 17, 19, 11, 15]"
      Knapsack_Capacity:
        regex: ^(0|[1-9][0-9]*)$
        default: 5
      elementi_proibiti:
        regex: ^(.*)$
        default: "[]"
      sol_type:
        regex: ^(opt_sol|opt_val|opt_sol_with_val|DPtable|all)$
        default: opt_sol
      opt_sol:
        regex: ^(.*)$
        default: "['A', 'B']"
      opt_val:
        regex: ^(.*)$
        default: 30
      DPtable:
        regex: ^(.*)$
        default: "[[0, 0, 0, 0, 0, 0], [0, 0, 13, 13, 13, 13], [0, 0, 13, 17, 17, 30], [0, 0, 13, 17, 19, 30] ]"
      pt_formato_OK:
        regex: ^(0|[1-9][0-9]*)$
        default: 0
      pt_feasibility_OK:
        regex: ^(0|[1-9][0-9]*)$
        default: 1
      pt_tot:
        regex: ^(0|[1-9][0-9]*)$
        default: 10
      esercizio:
        regex: ^(0|[1-9][0-9]*)$
        default: 0
      task:
        regex: ^(0|[1-9][0-9]*)$
        default: 0
      name_of_opt_val:
        regex: ^(.*)$
        default: opt_val
      name_of_opt_sol:
        regex: ^(.*)$
        default: opt_sol
      name_of_DPtable:
        regex: ^(.*)$
        default: DPtable
      with_output_files:
        regex: ^(0|1)$
        default: 0
      color_implementation:
        regex: ^(ANSI|html)$
        default: ANSI
      with_opening_message:
        regex: ^(0|1)$
        default: 0
      with_summary:
        regex: ^(0|1)$
        default: 0
  oracle:
    evaluator: [python, services/oracle_driver.py]
    args:
      elementi:
        regex: ^(.*)$
        default: "['A', 'B', 'C']"
      pesi:
        regex: ^(.*)$
        default: "[2, 3, 4]"
      valori:
        regex: ^(.*)$
        default: "[13, 17, 19]"
      Knapsack_Capacity:
        regex: ^(0|[1-9][0-9]*)$
        default: 5
      elementi_proibiti:
        regex: ^(.*)$
        default: "[]"
      sol_type:
        regex: ^(opt_sol|opt_val|opt_sol_with_val|DPtable|all)$
        default: all
      esercizio:
        regex: ^(0|[1-9][0-9]*)$
        default: 0
      task:
        regex: ^(0|[1-9][0-9]*)$
        default: 0
      name_of_opt_val:
        regex: ^(.*)$
        default: opt_val
      name_of_opt_sol:
        regex: ^(.*)$
        default: opt_sol
      name_of_DPtable:
        regex: ^(.*)$
        default: DPtable
      with_output_files:
        regex: ^(0|1)$
        default: 0
      color_implementation:
        regex: ^(ANSI|html)$
        default: ANSI
      with_opening_message:
        regex: ^(0|1)$
        default: 0

  synopsis:
    evaluator: [python, services/synopsis/synopsis_driver.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: any string without space characters but meant to specify one of the services of the problem {problem}
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: en
      metafile:
        regex: ^(main|en|it)$
        default: main
...
