Note:
- installare termcolor, tabulate e ansi2html
- chiamate con DPtable hanno output None (ATTUALMENTE NON IMPLEMENTATO)
- invio di file (submission_filehandler) attualmente non supportato nè da CLI nè quindi da Jupyter

CLI:
rtal connect RO_knapsack checker -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=opt_sol -a opt_sol="['A', 'B']"
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'checker', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "opt_sol", "opt_sol": "[\'A\', \'B\']"', '', '')

CLI:
rtal connect RO_knapsack checker -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=opt_val -a opt_val=30 -a with_opening_message
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'checker', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "opt_val", "opt_val": "30", "with_opening_message":"1"', '', '')

CLI:
rtal connect RO_knapsack checker -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=opt_sol_with_val -a opt_sol="['A', 'B']" -a opt_val=30 -a color_implementation='html'
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'checker', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "opt_sol_with_val", "opt_val": "30", "opt_sol": "[\'A\', \'B\']", "color_implementation":"html"', '', '')

CLI:
rtal connect RO_knapsack checker -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=DPtable -a DPtable="[[0, 0, 0, 0, 0, 0], [0, 0, 13, 13, 13, 13], [0, 0, 13, 17, 17, 30], [0, 0, 13, 17, 19, 30] ]"
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'checker', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "DPtable", "DPtable": "[[0, 0, 0, 0, 0, 0], [0, 0, 13, 13, 13, 13], [0, 0, 13, 17, 17, 30], [0, 0, 13, 17, 19, 30] ]"', '', '')

CLI:
rtal connect RO_knapsack checker -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=all -a opt_sol="['A', 'B']" -a opt_val=30 -a DPtable="[[0, 0, 0, 0, 0, 0], [0, 0, 13, 13, 13, 13], [0, 0, 13, 17, 17, 30], [0, 0, 13, 17, 19, 30] ]"
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'checker', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "all", "opt_sol": "[\'A\', \'B\']"', "opt_val": "30", "DPtable", "DPtable": "[[0, 0, 0, 0, 0, 0], [0, 0, 13, 13, 13, 13], [0, 0, 13, 17, 17, 30], [0, 0, 13, 17, 19, 30] ]"', '', '')

# Con richiesta di ottenimento di un certificato di soluzione su un file in locale:
CLI:
rtal connect RO_knapsack checker -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=opt_sol -a opt_sol="['A', 'B']"  -awith_output_files
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'checker', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "opt_sol", "opt_sol": "[\'A\', \'B\']", "with_output_files": "1"', '', '')

# Lettura da file dei parametri della sottoposizione al server TALight, invece che loro trasmissione come argomenti della chiamata di servizio. Può essere impiegato per verificare la validità della sottoposizione corrente:
ATTUALMENTE NON SUPPORTATO - ALMENO PER ORA NON SERVE
CLI:
rtal connect RO_knapsack checker -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=opt_sol -a opt_sol="['A', 'B']"  -f submission_filehandler=my_answer_to_problem_knapsack_task_1.txt
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'checker', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "opt_sol", "opt_sol": "[\'A\', \'B\']"', '"submission_filehandler": "my_answer_to_problem_knapsack_task_1.txt"', '')


# SERVIZIO ORACLE
CLI:
rtal connect RO_knapsack oracle -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=opt_sol
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'oracle', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "opt_sol"', '', '')

CLI:
rtal connect RO_knapsack oracle -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=opt_val -a with_opening_message
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'oracle', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "opt_val", "with_opening_message":"1"', '', '')

CLI:
rtal connect RO_knapsack oracle -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=opt_sol_with_val
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'oracle', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "opt_sol_with_val"', '', '')

CLI:
rtal connect RO_knapsack oracle -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=DPtable
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'oracle', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "DPtable"', '', '')

# Con richiesta di ottenere il file con soluzione (ed istanza) su un file in locale:
CLI:
rtal connect RO_knapsack oracle -a elementi="['A', 'B', 'C']" -a pesi="[2, 3, 4]" -a valori="[13, 17, 19]" -a Knapsack_Capacity=5 -a sol_type=opt_sol  -awith_output_files
Jupyter:
rtal_command(rtal, 'RO_knapsack', 'oracle', '"elementi": "[\'A\', \'B\', \'C\']", "pesi": "[2, 3 ,4]", "valori": "[13, 17, 19]", "Knapsack_Capacity": "5", "sol_type": "opt_sol", "with_output_files": "1"', '', '')
