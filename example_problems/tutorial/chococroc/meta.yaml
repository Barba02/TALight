%YAML 1.2
---
public_folder: public
services:
  check_is_winning:
    description: use this service to check out your belief about a certain configuration to be a winning one.
    evaluator: [python, services/check_game_value.py]
    args:
      m:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of rows of the chocolate bar.
      n:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of columns of the chocolate bar.
      value:
        regex: ^-2$
        default: -2
        explain: Your bet is that the (m,n) configuration is a winning one.
      silent:
        regex: ^(0|1)$
        default: 0
        explain: If this flag is set to 1 then nothing is printed unless your conjecture is a false one.
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  check_is_lost:
    description: use this service to check out your belief about a certain configuration to be a lost one.
    evaluator: [python, services/check_game_value.py]
    args:
      m:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of rows of the chocolate bar.
      n:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of columns of the chocolate bar.
      value:
        regex: ^-1$
        default: -1
        explain: Your bet is that the (m,n) configuration is a lost one.
      silent:
        regex: ^(0|1)$
        default: 0
        explain: If this flag is set to 1 then nothing is printed unless your conjecture is a false one.
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  check_grundy_value:
    description: use this service to check out your conjectured grundy value for a certain configuration of the chococroc game.
    evaluator: [python, services/check_game_value.py]
    args:
      m:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of rows of the chocolate bar.
      n:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of columns of the chocolate bar.
      value:
        regex: ^(0|[1-9][0-9]{0,50})$
        default: 0
        explain: The grundy value that you are guessing for a chocolate bar of m rows and n columns.
      silent:
        regex: ^(0|1)$
        default: 0
        explain: If this flag is set to 1 then nothing is printed unless your conjecture is a false one.
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  tell_me_about_config:
    description: use with caution this spoilering service in order to get more or less detailed information about a certain configuration of the the chococroc game.
    evaluator: [python, services/tell_me_about_config.py]
    args:
      m:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of rows of the chocolate bar.
      n:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of columns of the chocolate bar.
      info_requested:
        regex: ^(won_or_lost|grundy_val|gimme_a_winning_move|gimme_all_winning_moves)$
        default: won_or_lost
        explain: "the options are as follows:"
        explain1: -won_or_lost= just tell me whether the given configuration mxn is a winning or lost one.
        explain2: -grundy_val= please, tell me the grundy value of the given configuration mxn.
        explain3: -gimme_a_winning_move= if the given configuration mxn is winning, please, suggest me a winning move.
        explain4: -gimme_all_winning_moves= give me the whole set of winning moves for the given mxn configuration.
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  play:
    description: use this service if you want to play a game with our player, you can start first or second on every configuration you want.
    evaluator: [python, services/play.py]
    args:
      m:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of rows of the chocolate bar.
      n:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of columns of the chocolate bar.
      player:
        regex: ^(0|1)$
        default: 0
        explain: The value that indicates if you want start first, with 0, or second, with 1.
      value:
        regex: ^0$
        default: 0
        explain: You play the game against our computer.
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  play_val_measuring_game:
    description: use this service if you want to play a game with our player, you can start first or second on every configuration you want.
    evaluator: [python, services/play.py]
    args:
      m:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of rows of the chocolate bar.
      n:
        regex: ^([1-9][0-9]{0,50})$
        default: 1
        explain: Number of columns of the chocolate bar.
      player:
        regex: ^(0|1)$
        default: 0
        explain: The value that indicates if you want start first, with 0, or second, with 1.
      value:
        regex: ^1$
        default: 1
        explain: You play the game against our computer correlating the match with a NIM tower.
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it

  synopsis:
    evaluator: [python, services/synopsis/synopsis_server.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: any string without space characters but meant to specify one of the services of the problem {problem}
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
...
