%YAML 1.2
---
open-channel: '# I will serve: problem={problem}, service={service} with arguments: '
feedback_source: '# This feedback in english comes from the dictionary of the phrases .yaml file {service}_feedbackBook.{ENV["lang"]}.yaml contained in the folder \''lang\'' of the problem {problem}.'

# NOW THE PROBLEM SERVICE SPECIFIC SECTION:
successful-load: 'The file you have associated to `instance` filehandler has been successfully loaded.'
waiting-line: '#? Waiting for the graph.\nGraph format: (x,y) (w,z) ... (n,m)\n'
insert-line: 'Enter graph containing {ENV["num_vertices"]} vertices and {ENV["num_edges"]} edges:'
wrong-edges-number: '\nWrong number of edges ({len(edges)} instead of {ENV["num_edges"]})\n'
instance-from-catalogue-successful: 'The instance with instance_id={ENV["instance_id"]} has been successfully retrieved from the catalogue.'
this-is-the-instance: '\nThis is the instance:\n'
insert-opt-value: '\nWrite here your conjectured vertex cover for this graph if you have one (format: integers separated by spaces). Otherwise, if you only intend to be told about the vertex cover, enter "C".'
best-sol: 'A possible minimum vertex cover is:  '
size-sol: 'The size of the minimum vertex cover is: '
right-best-sol: 'We agree, the solution you provided is a valid minimum vertex cover for the graph.'
right-sol-not-min: 'The solution you provided is a valid vertex cover for the graph. However, it`s not minimum (your size is {size_ans}).'
wrong-sol: 'We don`t agree, the solution you provided is not a valid vertex cover for the graph. Edges not covered: '
node-not-in-graph: 'Vertex {v} is not a vertex of the graph. Aborting.'
