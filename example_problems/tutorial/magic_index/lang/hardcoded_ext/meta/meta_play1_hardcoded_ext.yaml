%YAML 1.2
---
public_folder: public
services:
spot_magic_indexes:
check_magic_indexes:
gimme_input_vector:
check_worst_case_num_questions:
play1:
  evaluator: [python, services/play1_server.py]
  description: You give us a natural n to start a play, that corresponds to the selected index for which you want to know the value. The server holds the secret array and you must find out precisely which of its indexes are magic. By spending one dollar, you can ask the server to display the value of an entry of your choice. You have an infinite number of dollars but you want to spend the least possible number of them. If you ask your opponent to play optimally, you can get proven a lower bound on the minimum number of queries in the worst case (which relates to the question with service check_worst_case_num_questions) and the goals above correct make full sense.
  args:
    #n:
      #regex: ^(0|[1-9][0-9]{0,5}|1000000)$
    opponent:
      regex: ^(optimal|random)$
      default: optimal
    goal:
      regex: ^(correct|at_most_twice_the_opt|opt_plus_one|optimal)$
      default: correct
    feedback:
      regex: ^(yes_no_goal|how_far|spot_first_gift|spot_every_gift)$
      default: yes_no_goal
      explain: "the levels of feedback are as follows:"
      explain1: "[yes_no_goal]  tells wethether your play reaches the goal set when launching the service."
      explain2: "[how_far]  tells how far you are from the goal you have set."
      explain3: "[spot_first_gift]  during the game signals out (in a commented line, not to disturb the bot that could possibly play in your place) your first move where your goal is compromised."
      explain4: "[spot_every_gift]  during the game signals out (in a commented line) every move where you waste one dollar."
    lang:
      regex: ^(hardcoded|hardcoded_ext|en|it)$
      default: it
eval_play1:
  evaluator: [python, services/eval_play1_server.py]
  args:
    goal:
      regex: ^(correct|at_most_twice_the_opt|opt_plus_one|optimal)$
      default: at_most_twice_the_opt
    feedback:
      regex: ^(yes_no_goal|how_far|spot_first_gift|spot_every_gift)$
      default: yes_no_goal
    lang:
      regex: ^(hardcoded|hardcoded_ext|en|it)$
      default: it
play2:
optimal_move1:

synopsis:
...
