%YAML 1.2
---
public_folder: public
services:
  max_fin_set:
    evaluator: [python, services/max_fin_set_driver.py]
    description: 'Con questo servizio puoi convincerti che ogni insieme finito e non vuoto di numeri ammette sempre un massimo.'
    files:
      - instance
    args:
      source:
        regex: ^(catalogue|randgen)$
        default: randgen
        explain: 'Per inviare al servizio un\''istanza contenuta in un file presente sulla tua macchina non è necessario impostare questo argomento, basta chiamare il servizio con:\n rtal connect limiti max_fin_set -finstance=percorso_del_file_contenete_l\''istanza\n Con questa chiamata senza ulteriori argomenti, il servizio presuppone che il file contenga tante righe quanti gli elementi dell\''insieme (una riga per ogni numero) e ti verra` ritornato il massimo. L\''argomento `source` viene usato solo quando non associ un file locale; in tal caso calcolerai tu il massimo dell\''insieme. Puoi determinare il modo in cui l\''istanza viene immessa nel servizio:' 
        explain1: '[catalogue] il servizio lavora su un\''istanza presa dal catalogo situato sul server. Le istanze nel catalogo sono numerate in modo progressivo a partire da 1. Usa l\''argomento `instance_id` per specificare l\''istanza a cui sei interessato/a.'
        explain2: '[randgen_1] il servizio lavora su istanze pseudo-casuali. In questo caso dovresti specificare i valori per gli argomenti del servizio corrispondenti ai descrittori d\''istanza (set_cardinality, seed) quando li vuoi differenti dai loro valori di default.'
        # explain3: '[terminal] you enter your instance (just an element, one per line) directly by either typing it directly or through cut and paste.'
      reference_set:
        regex: ^(natural|decimal)$
        default: natural
        explain: 'specifica l\''insieme dei numeri su cui vuoi lavorare: '
        explain1: '[natural] per lavorare con i numeri naturali'
        explain2: '[decimal] per lavorare con i decimali limitati'
      instance_id:
        regex: ^([1-9][0-9]*)$
        regex-explained: 'qualsiasi naturale positivo (nella sua rappresentazione decimale)'
        regex-URL: 'https://extendsclass.com/regex/a55297b'
        default: 1
        explain: 'Questo argomento viene utilizzato per identificare una particolare istanza (ovvero un insieme) all\''interno del catalogo delle istanze archiviate sul server. Questo catalogo è organizzato in raccolte di istanze con caratteristiche comuni.'
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'sia la stringa "random_seed" o un numero decimale di esattamente 6 cife'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'specificare il codice numerico (qualsiasi numero intero nell\''intervallo [100000,999999]) per lavorare con un\''istanza pseudo-casuale già incontrata. Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seed a caso e lo comunica all\''utente.'
      set_cardinality:
        regex: ^([1-9][0-9]*)$
        regex-explained: 'qualsiasi numero naturale maggiore di 0 (l\''insieme deve avere almeno un elemento)'
        regex-URL: 'https://extendsclass.com/regex/a55297b'
        default: 7
        explain: 'Questo argomento viene utilizzato per indicare la cardinalità dell\''insieme di cui si vuole trovare il massimo.'
      download:
        regex: ^(0|1)$
        default: 0
        explain: 'Se questo flag è impostato a 1 allora la soluzione viene scaricata come file nella cartella il cui percorso completo è specificato tramite il flag -o.'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  max_fin_set_proof:
    evaluator: [python, services/max_fin_set_proof_driver.py]
    description: 'Questo servizio ti permette di dimostrare formalmente che ogni insieme finito e non vuoto di numeri ammette sempre un massimo.'
    args:
      cardinality:
        regex: ^(random|generic)$
        default: random
        explain: 'Per iniziare una dimostrazione guidata passo passo e allenarti su insiemi di k elementi (con k che va da 1 a 10) mantieni il valore di default `random`, altrimenti imposta il valore `generic` per passare al caso generale (insieme di n elementi, n non definito).'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  max_inf_set:
    evaluator: [python, services/max_inf_set_driver.py]
    description: 'Con questo servizio potrai verificare se un insieme non finito ha un massimo oppure no.'
    args:
      source:
        regex: ^(catalogue|randgen)$
        default: randgen
        explain: 'Attraverso l\''argomento `source` puoi determinare il modo in cui l\''istanza viene immessa nel servizio:'
        explain1: '[catalogue] il servizio lavora su un\''istanza presa dal catalogo situato sul server. Le istanze nel catalogo sono numerate in modo progressivo a partire da 1. Usa l\''argomento `instance_id` per specificare l\''istanza a cui sei interessato/a.'
        explain2: '[randgen_1] il servizio lavora su istanze pseudo-casuali. capire se mettere come descittore d\''istanza `parameter`: con l\''argomento pari a 1 si avra` un\''istanza del tipo {{x | x=2*k+1, 3<k<9  k in N}}; con l\''argomento pari a 0 si avra` qualcosa del tipo {{x in R | 4<=x^2<49}}'
      instance_id:
        regex: ^([1-9][0-9]*)$
        regex-explained: 'qualsiasi naturale positivo >=1 (nella sua rappresentazione decimale)'
        regex-URL: 'https://extendsclass.com/regex/a55297b'
        default: 1
        explain: 'Questo argomento viene utilizzato per identificare una particolare istanza (ovvero un insieme) all\''interno del catalogo delle istanze archiviate sul server. Questo catalogo è organizzato in raccolte di istanze con caratteristiche comuni.'
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'sia la stringa "random_seed" o un numero decimale di esattamente 6 cife'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'specificare il codice numerico (qualsiasi numero intero nell\''intervallo [100000,999999]) per lavorare con un\''istanza pseudo-casuale già incontrata. Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seed a caso e lo comunica all\''utente.'
      download:
        regex: ^(0|1)$
        default: 0
        explain: 'Se questo flag è impostato a 1 allora la soluzione viene scaricata come file nella cartella il cui percorso completo è specificato tramite il flag -o.'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  max_sup:
    evaluator: [python, services/max_sup_driver.py]
    description: 'In questo servizio riepilogativo vengono messi insieme i concetti di insieme limitato superiormente, massimo ed estremo superiore.'
    args:
      source:
        regex: ^(catalogue|randgen)$
        default: randgen
        explain: 'Attraverso l\''argomento `source` puoi determinare il modo in cui l\''istanza viene immessa nel servizio:'
        explain1: '[catalogue] il servizio lavora su un\''istanza presa dal catalogo situato sul server. Le istanze nel catalogo sono numerate in modo progressivo a partire da 1. Usa l\''argomento `instance_id` per specificare l\''istanza a cui sei interessato/a.'
        explain2: '[randgen_1] il servizio lavora su istanze pseudo-casuali. capire se mettere come descittore d\''istanza `parameter`: con l\''argomento pari a 1 si avra` un\''istanza del tipo {{x | x=2*k+1, 3<k<9  k in N}}; con l\''argomento pari a 0 si avra` qualcosa del tipo {{x in R | 4<=x^2<49}}'
      instance_id:
        regex: ^([1-9][0-9]*)$
        regex-explained: 'qualsiasi naturale positivo >=1 (nella sua rappresentazione decimale)'
        regex-URL: 'https://extendsclass.com/regex/a55297b'
        default: 1
        explain: 'Questo argomento viene utilizzato per identificare una particolare istanza (ovvero un insieme) all\''interno del catalogo delle istanze archiviate sul server. Questo catalogo è organizzato in raccolte di istanze con caratteristiche comuni.'
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'sia la stringa "random_seed" o un numero decimale di esattamente 6 cife'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'specificare il codice numerico (qualsiasi numero intero nell\''intervallo [100000,999999]) per lavorare con un\''istanza pseudo-casuale già incontrata. Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seed a caso e lo comunica all\''utente.'
      download:
        regex: ^(0|1)$
        default: 0
        explain: 'Se questo flag è impostato a 1 allora la soluzione viene scaricata come file nella cartella il cui percorso completo è specificato tramite il flag -o.'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  archimede_prover:
    evaluator: [python, services/archimede_prover_driver.py]
    description: 'Questo servizio ti permetterà di convincere me (ed anche un po\'' te stesso) che per ogni x reale, x>0, esiste un numero naturale n tale che 1/n < x (anche conosciuto come principio di Archimede).'
    args:
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'sia la stringa "random_seed" o un numero decimale di esattamente 6 cife'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'specificare il codice numerico (qualsiasi numero intero nell\''intervallo [100000,999999]) per lavorare con un\''istanza pseudo-casuale già incontrata. Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seed a caso e lo comunica all\''utente.'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  archimede_disprover:
    evaluator: [python, services/archimede_disprover_driver.py]
    description: 'Questo servizio cercherà di convincerti che per ogni x reale, x>0, esiste un numero naturale n tale che 1/n < x (anche conosciuto come principio di Archimede).'
    args:
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'sia la stringa "random_seed" o un numero decimale di esattamente 6 cife'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'specificare il codice numerico (qualsiasi numero intero nell\''intervallo [100000,999999]) per lavorare con un\''istanza pseudo-casuale già incontrata. Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seed a caso e lo comunica all\''utente.'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  density_Q_in_R_prover:
    evaluator: [python, services/density_Q_in_R_prover_driver.py]
    description: 'In questo percorso dimostreremo insieme passo passo che l\''insieme dei numeri razionali e\'' denso nei reali, ovvero che dati due numeri reali x,y con x<y, esiste un numero q razionale tale che x < q < y.'
    args:
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'sia la stringa "random_seed" o un numero decimale di esattamente 6 cife'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'specificare il codice numerico (qualsiasi numero intero nell\''intervallo [100000,999999]) per lavorare con un\''istanza pseudo-casuale già incontrata. Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seed a caso e lo comunica all\''utente.'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  density_Q_in_R_disprover:
    evaluator: [python, services/density_Q_in_R_disprove_driver.py]
    description: 'Con questo servizio cerchero` di convincerti che l\''insieme dei numeri razionali e\'' denso nei reali, ovvero che dati due numeri reali x,y con x<y, esiste un numero q razionale tale che x < q < y.'
    args:
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'sia la stringa "random_seed" o un numero decimale di esattamente 6 cife'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'specificare il codice numerico (qualsiasi numero intero nell\''intervallo [100000,999999]) per lavorare con un\''istanza pseudo-casuale già incontrata. Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seed a caso e lo comunica all\''utente.'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  archimede_curiosity_prover:
    evaluator: [python, services/archimede_curiosity_prover.py]
    description: 'Questo servizio può essere visto come un piccolo salto verso i limiti di successioni. Potrai convincermi che il limite di una successione convergente di termini positivi non è sempre strettamente positivo e sperimenterai la correlazione che sussiste tra questa affermazione e il principio di Archimede.'
    args:
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'sia la stringa "random_seed" o un numero decimale di esattamente 6 cife'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'specificare il codice numerico (qualsiasi numero intero nell\''intervallo [100000,999999]) per lavorare con un\''istanza pseudo-casuale già incontrata. Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seed a caso e lo comunica all\''utente.'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  archimede_curiosity_disprover:
    evaluator: [python, services/archimede_curiosity_disprover.py]
    description: 'Questo servizio può essere visto come un piccolo salto verso i limiti di successioni. Proverò a convincerti che il limite di una successione convergente di termini positivi non è sempre strettamente positivo e sperimenteremo la correlazione che sussiste tra questa affermazione e il principio di Archimede.'
    args:
      seed:
        regex: ^(random_seed|[1-9][0-9]{5,5})$
        regex-explained: 'sia la stringa "random_seed" o un numero decimale di esattamente 6 cife'
        regex-URL: 'https://extendsclass.com/regex/90e74ec'
        default: random_seed
        explain: 'specificare il codice numerico (qualsiasi numero intero nell\''intervallo [100000,999999]) per lavorare con un\''istanza pseudo-casuale già incontrata. Quando questo argomento viene lasciato al suo valore predefinito (random_seed), il servizio sceglie un seed a caso e lo comunica all\''utente.'
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: it
  synopsis:
    evaluator: [python, services/synopsis/synopsis_driver.py]
    args:
      service:
        regex: ^((\S)+)$
        default: synopsis
        explain: any string without space characters but meant to specify one of the services of the problem %(problem)s
      lang:
        regex: ^(hardcoded|hardcoded_ext|en|it)$
        default: en
      metafile:
        regex: ^(main|en|it)$
        default: main
...
